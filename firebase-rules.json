{
  "rules": {
    ".read": false,
    ".write": false,
    
    "users": {
      "$uid": {
        // Users can read and write only their own data
        ".read": "auth !== null && auth.uid === $uid",
        ".write": "auth !== null && auth.uid === $uid",
        
        // Validate user data
        ".validate": "newData.hasChildren(['email', 'betaCode'])",
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/)"
        },
        "betaCode": {
          ".validate": "newData.isString()"
        }
      }
    },
    
    "betaCodes": {
      // Anyone can read beta codes
      ".read": true,
      // Only admins can write to beta codes
      ".write": "auth !== null && root.child('admins').child(auth.uid).exists() && root.child('admins').child(auth.uid).val() === true",
      
      "$codeId": {
        // Users can update a beta code to associate it with their email
        ".write": "auth !== null && (!data.exists() || !data.child('email').exists() || data.child('email').val() === null)",
        
        // Validate beta code data
        "code": {
          ".validate": "newData.isString()"
        },
        "used": {
          ".validate": "newData.isBoolean()"
        },
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/)"
        }
      }
    },
    
    "feedback": {
      // Only authenticated users can read feedback
      ".read": "auth !== null",
      
      // Feedback is organized by type
      "$feedbackType": {
        // Users can write feedback
        ".write": "auth !== null && auth.email_verified === true",
        
        "$feedbackId": {
          // Only admins can update status
          "status": {
            ".write": "auth !== null && root.child('admins').child(auth.uid).exists() && root.child('admins').child(auth.uid).val() === true"
          }
        }
      }
    },
    
    "applications": {
      // Only admins can read all applications
      ".read": "auth !== null && root.child('admins').child(auth.uid).exists() && root.child('admins').child(auth.uid).val() === true",
      // Anyone can write an application
      ".write": true,
      
      "$applicationId": {
        // Only admins can update application status
        "status": {
          ".write": "auth !== null && root.child('admins').child(auth.uid).exists() && root.child('admins').child(auth.uid).val() === true"
        },
        
        // Validate application data
        "name": {
          ".validate": "newData.isString()"
        },
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/)"
        }
      }
    },
    
    "notifications": {
      // Only admins can read notifications
      ".read": "auth !== null && root.child('admins').child(auth.uid).exists() && root.child('admins').child(auth.uid).val() === true",
      // Anyone can write a notification request
      ".write": true,
      
      "$notificationId": {
        // Validate notification data
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/)"
        },
        "project": {
          ".validate": "newData.isString()"
        }
      }
    },
    
    "admins": {
      // Only admins can read the admin list
      ".read": "auth !== null && root.child('admins').child(auth.uid).exists() && root.child('admins').child(auth.uid).val() === true",
      // Only admins can write to the admin list (add/remove admins)
      ".write": "auth !== null && root.child('admins').child(auth.uid).exists() && root.child('admins').child(auth.uid).val() === true"
    }
  }
} 